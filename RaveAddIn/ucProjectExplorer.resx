<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imgList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imgList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAU
        DwAAAk1TRnQBSQFMAgEBBgEAASgBAAEoAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAASADAAEBAQABCAYAAQgYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wQADf8FAAv/IAAC/wEA
        BbwFBwHxAfICAAL/AgAG7ALrAfcBByEAARcB+QGUBUoDSQEVAiIBSgG8AQABFwH5AZQBAAiuAmYB9yAA
        AUcB+QGUAcMCGwL0AfMDGwEaAZ8BcwFKAQABRwH5AZQBAAEOAa4B/wEOAa4B/wEOAa4B/wEOAWYgAAG9
        AZQB9AkVASICnwEVAQABvQGUAfQBAAHlAa4BWQHlAa4BWQHlAa4BWQHlAWYgAAEWAb0B8wEVA8IBGgEc
        AXICmQEiAp8BSgEAARYBvQHzAQALriAAARYB+QEaARUBGwEAAcIBGgFQA5kBFQGfAZkBSgEAARYB+QEa
        AQABDgGuAf8BDgGuAf8BDgEDAf8BDgGuIAABFgH5Ab0BFQEbAsIBmQFKAZkBAAGZARUBnwGZAUoBAAEW
        AfkBvQEAAeUBrgFZAeUBrgFZAeUBAwFZAeUBriAAAeMB+QG9ARUBGwGZAXICSgOZARUBnwGZAUoBAAHj
        AfkBvQEAC64gAAHjAfkBvQEVAUoB7AG8AfQBvAFKApkBFQEIAZkBSgEAAeMB+QG9AQABDgGuAf8BDgGu
        Af8BDgGuAf8BDgGuIAABFwH5Ab0BSQHyAf8B9gEAAfQBvAFKAZkBFQKZAUoBAAEXAfkBvQEAAeUBrgFZ
        AeUBrgFZAeUBrgFZAeUBriAAARcB+QG9AUkC9gH/AfYC9AG8AUoBFQKZAUoBAAEXAfkBvQEAC64gAAFH
        AfkBlAJJCBUCmQFKAQABRwH5AZQBAAEOAa4B/wEOAa4B/wEOAa4B/wEOAWwgAAFHAfkBlAH2BMMBGwHC
        AhoBmQEIAnMBAAFHAfkBlAEAAeUBrgFZAeUBkQFZAeUBrgFZAeUBbSAAApQBvQnvAgcB7wHxAQAClAG9
        AQAIkQKuAfMjAA3/BQAL/yQAAf8B8wEHAfcB7QHvAfEB/xQAIP8DAAH0AZIBbQESAuoBEgHqAesB8gMA
        A/8J9AL/AwABBwHtCOwC6wH3AQcCAAHyAfAFvAUHAfEB8gMAAfMB6wESAuoFEgFtAfICAAPsAm4BbQHq
        AUoBEwEUAhUB7wH/AgAB7wyuAmYB9wHwAXMGSgNJARUCIgFKAbwBAAH/AewB6gESAW0B9wG8Ae8B9wFt
        AeoB7wEHAfQBAAHsAhwGUgNLAUQB/wIAAa4B/wEOAa4B/wEOAa4B/wEOAa4B/wEOAa4B/wEOAWYBcwEc
        ARsBwwIbAvQB8wMbARoBnwFzAUoBAAEHAeoBEgFtAe0B6wHxAewB6gLvAfEB8AHxAf8B7AIcAZkDegNZ
        AVMBUgFKAQcB/wEAAZEBWQHlAa4BWQHlAa4BWQHlAa4BWQHlAa4BWQHlAWYBcgEbAcMJFQEiAp8BFQH/
        AewCEgEHAW0BQwHvAQ4BEgK8AfAB8gHxAf8B7AF5AZkBHAF5BHoCWQFTAUsBSgH0AQABkQ+uAXIBGwHD
        ARUDwgEaARwBcgKZASICnwFKAfQBbQESAesBBwHqARABEQEPAgcB8ALyAbwB8wHsAnkBHAGZBnoCWQFL
        AQcB9AGRAf8BDgGuAf8BDgGuAf8BDgGuAf8BDgEDAf8BDgGuAXMCGwEVARsBAAHCARoBUAOZARUBnwGZ
        AUoB8wLqAewB8AHqAQ4BDwEOARUB8AG8AfIC8QHzAe0BmQGaApkBeQd6AXQB7QH0AZEBWQHlAa4BWQHl
        Aa4BWQHlAa4BWQHlAQMBWQHlAa4BcwHDARsBFQEbAsIBmQFKAZkBAAGZARUBnwGZAUoB9AFtAeoB7AHx
        AW0BEQEHAfcBAAH3AfAB8wHxAbwB8wEcAZkBoAGaAZkBHAGZAhwBdAMcAnMB9AGRD64BcwHDARsBFQEb
        AZkBcgJKA5kBFQGfAZkBSgH/AesBEgFtAbwB6gEQAQcB7AEAAfcCBwHvAfAB9AEcAZkCoAGaApkFeQHs
        AvIB/wGRAf8BDgGuAf8BDgGuAf8BDgGuAf8BDgGuAf8BDgGuAXMBwwEaARUBSgHsAbwB9AG8AUoCmQEV
        AQgBmQFKAQAB7wESAeoB7AHqAwABEgEHAe8CBwHxAf8BHAGZA6ABmgF5BXQB7AH/AgABkQFZAeUBrgFZ
        AeUBrgFZAeUBrgFZAeUBrgFZAeUBrgFzAcMBGgFJAfIB/wH2AQAB9AG8AUoBmQEVApkBSgEAAfQBbQMS
        AewB7QHvAfEBkgFtAQcBvAH0AQABHAGZBKABmQHvBfAB/wIAAZIPrgFzAfYBGgFJAvYB/wH2AvQBvAFK
        ARUCmQFKAgAB8AFtARIC6gJtA+oBbQHxAf8BAAHvBpkBvAgAAbUB/wEOAa4B/wEOAa4B/wEOAa4B/wEO
        Aa4B/wEOAWwBcwH2ARsCSQgVApkBSgIAAf8B8QHrB+oB7wH/AgAB8gHwBLwB8AHzCAAB9wFZAeUBkQFZ
        AeUBrgFZAeUBkQFZAeUBrgFZAeUBbQEcAQgC9gTDARsBwgIaAZkBCAJzBAAB9AEHAewCbQHrAe8B8wH/
        EwAB9AH3AZIKkQKuAfMBAAvvAgcB7wHxBgAE/xYAIP8BQgFNAT4HAAE+AwABKAMAAUADAAEgAwABAQEA
        AQEGAAEBFgAD/wEAAeABAAH4BQABIAEBAZgBAQYAAYgHAAGIBwABiAcAAYgHAAGIBwABiAcAAYgHAAGI
        BwABiAcAAYgHAAGIBwABiAcAAYgFAAHgAQAB+AUAAfABDwL/BAAB4AEHAQABAwGAAQEBgAEBAcABAwEA
        AQMEAAGAAQEBAAEDBAABgAIAAQEHAAEBJAABgAIAAQMEAAGAAQEBAAEDBAABwAEBAQAB/wQAAcABAwEA
        Af8EAAHwAQcC/wIAAYABAAH8AT8C/wQACw==
</value>
  </data>
</root>